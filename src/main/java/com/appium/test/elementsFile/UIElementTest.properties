# 一、思路:
# 1、UI自动化的流程无非是 定位元素、操作元素、记录操作事件log、等待下一个元素出现（等待时间）、断言是否出现 ——> 继续循环操作
# 2、设计思路：每个properties文件对应一个自动化场景流程，一个properties文件对应一个业务场景类：1 properties —— 1 业务场景class
# 3、每个业务场景class - 创建一个方法，读取properties文件，顺序读取key并执行自动化，
# 4、创建统一的testng类管理用例：@Test下 场景类对象.方法；@Before或@After下 初始化代码，执行下条case

# 元素定位方式：byName、byClassPath、byId、byXpath等
# 元素操作：click（点击）、sendkeys（输入数据）、getAttribute（获取属性值）
# 页面操作：上、下、左、右滑动、getPageContents（获取页面是否包含指定值）
# 全局隐式等待、针对特定元素的显式等待
# 每个操作，记录日志log
# 断言方式
# 定义key值（非常重要，定义几个重要关键字）

# 二、specification（书写规范，重要！！！！！！）
# 每个小case必须有三行，行的顺序必须一致，每行的key值最后必要以_locator、_opr、_assert为后缀，因为代码中据此做的判断
# 首行包含三个内容：等待时间（秒为单位）、定位类型>>定位地址、case描述；它们之间必须以英文分号分隔":"，都为必填，时间可为0
# 第二行是触发动作，目前只实现了click和sendkes两个功能，格式为：click或send(123456)，必须严格按此书写
# 第三行是触发动作后的断言，字符串格式，可为空

# 三、缺陷
# 1、目前实现的功能如上述二所述，仅支持常见的点击和输入数据两种操作类型，其他如滑动、切换context、TouchAction方式点击以及断言尚未实现
#    需要在代码中处理，但即使如此，数据分离已经有很大的进步了，后续再进行优化即可，支持更多的场景
# 2、该properties文件中的key值定义的比较固定，且要遵从一定的书写规则，以及冒号作为参数分隔符不够安全，后面会继续优化

mine_locator=30:id>>fourImageView:首页-点击我的
mine_opr=click
mine_assert=爱飞的蒲公英


clickOrder_locator=10:xpath>>//android.widget.TextView[@text='订单'][@index=1]:点击订单按钮
clickOrder_opr=click
clickOrder_assert=个人投资课程

course_locator=20:id>>tv_title:点击张晓宇的个人投资课按钮
course_opr=click
course_assert=这一次，知识就是财富


back1_locator=20:id>>btn_back:点击订单详情的返回按钮
back1_opr=click
back1_assert=购买成功

back2_locator=20:id>>btn_back:点击订单列表中的返回按钮
back2_opr=click
back2_assert=爱飞的蒲公英

medal_locator=20:id>>tv_medal_counts:点击我的-勋章按钮
medal_opr=click
medal_assert=升级勋章

study_locator=10:xpath>>//android.view.View[@text='终身学习Lv.1'][@index=1]:点击终身学习Lv.1按钮
study_opr=click
study_assert=分享

share_locator=6:xpath>>//android.widget.Button[@text='分享'][@index=0]:点击分享按钮
share_opr=click
share_assert=分享


shareWeChat_locator=6:xpath>>//android.widget.TextView[@text='微信'][@index=1]:点击分享到微信按钮
shareWeChat_opr=click
shareWeChat_assert=分享